{"version":3,"sources":["img/logo.png","components/Logo/logo.jsx","views/home/home.jsx","components/happy/happy.jsx","components/grumpty/grumpty.jsx","components/tittle/tittle.jsx","views/select/select.jsx","components/gameComponents/square/square.jsx","components/gameComponents/game/game.jsx","components/gameComponents/board/board.jsx","views/play/play.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","Logo","src","logo","alt","className","Component","Home","to","Happy","styles","width","this","props","height","type","style","Grumpty","Tittle","content","Select","handleClick","console","log","id","onClick","Square","value","highlightWinner","Game","status","useState","Array","fill","squares","setSquare","isXNext","setXNext","winningInfo","lines","i","length","a","b","c","winner","line","isDraw","WinningLogic","winnerHighlight","renderSquare","nextSquare","slice","includes","Play","App","basename","window","location","pathname","exact","path","render","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5709c5f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a23d6e43.png\";","import React, {Component} from 'react';\r\nimport logo from '../../img/logo.png';\r\nimport './logo.css';\r\n\r\nclass Logo extends Component{\r\n    render(){\r\n      return (\r\n        <figure>\r\n            <img src={logo} alt=\"Happy or Grumpty\" className=\"logo-gh\"/>\r\n        </figure>\r\n          )  \r\n    }\r\n};\r\n\r\nexport default Logo;","import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport Logo from '../../components/Logo/logo';\r\nimport './home.css';\r\n\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"home-view\">\r\n        <Logo/>\r\n        <nav>\r\n          <Link to=\"/select\" className=\"start-button\">\r\n            START\r\n          </Link>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport './happy.css';\r\n\r\nclass Happy extends Component {\r\n    render () {\r\n        const styles = {\r\n            width: this.props.width,\r\n            height: this.props.height\r\n        }\r\n        return (\r\n            <input type=\"button\" \r\n            className=\"icon-button2\" \r\n            style={styles}>\r\n            </input>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Happy;","import React, {Component} from 'react';\r\nimport './grumpty.css';\r\n\r\nclass Grumpty extends Component {\r\n    render () {\r\n        const styles = {\r\n            width: this.props.width,\r\n            height: this.props.height\r\n        }\r\n        return (\r\n            <input type=\"button\" className=\"icon-button\" style={styles}></input>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Grumpty;","import React, {Component} from 'react';\r\nimport './tittle.css';\r\n\r\nclass Tittle extends Component {\r\n    render (){\r\n        return (\r\n            <h3 className=\"tittleAll\">{this.props.content}</h3>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tittle","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Happy from '../../components/happy/happy';\r\nimport Grumpty from '../../components/grumpty/grumpty';\r\nimport Tittle from '../../components/tittle/tittle';\r\nimport './select.css';\r\n\r\nclass Select extends Component {\r\n\thandleClick= () => {\r\n\t\tconsole.log('Se hizo click');\r\n    }\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"select-view\">\r\n\t\t\t\t<Tittle content=\"PLAY FIRST:\" />\r\n\t\t\t\t\t<figure id=\"happy-icon\" className=\"figure1\" onClick={() => this.handleClick()}>\r\n\t\t\t\t\t\t<Happy width=\"100px\" height=\"100px\" />\r\n\t\t\t\t\t</figure>\r\n\t\t\t\t<Tittle content=\"PLAY SECOND:\" />\r\n\t\t\t\t\t<figure id=\"grumpty-icon\" className=\"figure1\" onClick={this.handleClick} >\r\n\t\t\t\t\t\t<Grumpty width=\"100px\" height=\"100px\" />\r\n\t\t\t\t\t</figure>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t<nav>\r\n\t\t\t\t\t<Link to=\"/play\" className=\"play-button\">\r\n\t\t\t\t\t\tPLAY!\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<Link to=\"/\" className=\"home-button\"></Link>\r\n\t\t\t\t</nav>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Select;\r\n","import React from 'react'\r\nimport Happy from '../../happy/happy'\r\nimport Grumpty from '../../grumpty/grumpty'\r\n\r\n\r\nfunction Square({ onClick, value, highlightWinner }) {\r\n  const className = \"square\" + (highlightWinner ? \"highlight\" : \"\");\r\n  const squareComponents = () => {\r\n    if(\"square\" === 'X') {\r\n     \r\n    }\r\n\r\n  }\r\n  return (\r\n    <button className={className} onClick={onClick}>\r\n      {value}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Square;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport Square from '../square/square'\r\nimport {WinningLogic} from '../board/board'\r\nimport Happy from '../../happy/happy'\r\nimport Grumpty from '../../grumpty/grumpty'\r\nimport './game.css'\r\n\r\n\r\nfunction Game() {\r\n    const [squares, setSquare] = useState(Array(9).fill(null));\r\n    const [isXNext, setXNext] = useState(true);\r\n  \r\n    const winningInfo = WinningLogic(squares);\r\n    const winner = winningInfo.winner;\r\n\r\n    let happyCat = <Happy width= \"80px\" height = \"80px\"/>;\r\n    let grumptyCat = <Grumpty width= \"80px\" height = \"80px\"/>;\r\n\r\n  \r\n    const winnerHighlight = winningInfo.line;\r\n    let status;\r\n    if (winner) {\r\n      status =\"WIN! \" + winner;\r\n    } else if (winningInfo.isDraw) {\r\n      status = \"DRAW\";\r\n    } else {\r\n    status = <span>Next Player is: {isXNext ? <Happy width= \"40px\" height = \"40px\"/> : <Grumpty width= \"40px\" height = \"40px\"/>}</span>\r\n    } \r\n\r\n    function renderSquare(i) {\r\n      return (\r\n        <Square\r\n          onClick={() => {\r\n              if (squares[i] != null || winner != null){\r\n                  return;\r\n              }\r\n            const nextSquare = squares.slice();\r\n            nextSquare[i] = isXNext ?  'X' : 'O';\r\n            setXNext(!isXNext);\r\n            setSquare(nextSquare);\r\n          }}\r\n          value={squares[i]}\r\n          highlightWinner={winnerHighlight && winnerHighlight.includes(i)}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <div className= \"all-board\">\r\n          <br/>\r\n          <br/>\r\n        <div className=\"status\">{status}</div>\r\n        <br/>\r\n        <br/>\r\n        <div className=\"board-row\">\r\n          {renderSquare(0)}\r\n          {renderSquare(1)}\r\n          {renderSquare(2)}\r\n        </div>\r\n  \r\n        <div className=\"board-row\">\r\n          {renderSquare(3)}\r\n          {renderSquare(4)}\r\n          {renderSquare(5)}\r\n        </div>\r\n  \r\n        <div className=\"board-row\">\r\n          {renderSquare(6)}\r\n          {renderSquare(7)}\r\n          {renderSquare(8)}\r\n        </div>\r\n        <br/>\r\n        <figure className= \"exit-icons\">\r\n        </figure>\r\n        \r\n      </div>\r\n    );\r\n}\r\n\r\n  export default Game;\r\n  \r\n  ","export function WinningLogic(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6]\r\n    ];\r\n  \r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return {\r\n          winner: squares[a],\r\n          line: lines[i],\r\n          isDraw: false\r\n        };\r\n      }\r\n    }\r\n  \r\n    let isDraw = true;\r\n    for (let i = 0; i < squares.length; i++) {\r\n      if (squares[i] === null) {\r\n        isDraw = false;\r\n      }\r\n    }\r\n  \r\n    return {\r\n      winner: null,\r\n      line: null,\r\n      isDraw: isDraw\r\n    };\r\n  }\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport Game from \"../../components/gameComponents/game/game\";\r\n// import Tittle from \"../../components/tittle/tittle\";\r\nimport './play.css'\r\n\r\nfunction Play() {\r\n  return (\r\n    <div className=\"play-view\">\r\n        <Game/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Play\r\n\r\n","import React, {Component} from 'react';\nimport './App.css'\nimport Home from './views/home/home';\nimport Select from './views/select/select'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Play from './views/play/play';\n\nclass App extends Component {\n    \n    render() {\n               return (\n            <Router basename={window.location.pathname} >\n                <Switch >\n                    <Route exact path=\"/\" render={props => <Home/>}></Route>\n                    <Route exact path=\"/select\" render={props => <Select/>}></Route>\n                    <Route exact path=\"/play\" render={props => <Play/>}></Route>\n                </Switch>\n            </Router>\n        )\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}